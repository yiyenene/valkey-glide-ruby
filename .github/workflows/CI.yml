name: CI

on:
  push:
    branches:
      - main

  pull_request:

jobs:
  lint:
    name: Rubocop
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"
          bundler-cache: true
      - name: Lint
        run: bundle exec rubocop

  standalone:
    runs-on: ubuntu-latest
    name: Standalone / Ruby ${{ matrix.ruby }} Valkey ${{ matrix.valkey }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        ruby:
          - 3.4
          - 3.3
          - 3.2
          - 3.1
          - 3.0
          - 2.7
          - 2.6
          - jruby
        valkey:
          - 7.2.10
          - 8
          - 8.1

    services:
      valkey:
        image: valkey/valkey:${{ matrix.valkey }}
        ports:
          - 6379:6379
        options: >-
          --health-cmd="valkey-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - name: Run standalone tests
        run: bundle exec rake test:valkey

  cluster:
    runs-on: ubuntu-latest
    name: Cluster / Ruby ${{ matrix.ruby }}
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        ruby:
          - 3.4
          - 3.3
          - 3.2
          - 3.1
          - 3.0

    services:
      valkey-cluster:
        image: grokzen/redis-cluster:7.0.15
        ports:
          - 7000:7000
          - 7001:7001
          - 7002:7002
          - 7003:7003
          - 7004:7004
          - 7005:7005
        options: >-
          --health-cmd "redis-cli -p 7000 ping && redis-cli -p 7001 ping && redis-cli -p 7002 ping"
          --health-interval 15s
          --health-timeout 10s
          --health-retries 15

    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true

      - name: Configure cluster nodes
        run: |
          echo "=== Disabling protected mode on all nodes ==="
          for port in 7000 7001 7002 7003 7004 7005; do
            echo "Configuring port $port..."
            docker exec $(docker ps -q | head -n1) redis-cli -p $port config set protected-mode no || echo "Failed to configure port $port"
          done

      - name: Wait for cluster to be ready
        run: |
          echo "=== Waiting for Redis cluster to be fully ready ==="
          max_attempts=60
          attempt=1
          
          while [ $attempt -le $max_attempts ]; do
            echo "Attempt $attempt/$max_attempts: Checking cluster state..."
            
            # Check if all nodes are responding
            all_nodes_up=true
            for port in 7000 7001 7002 7003 7004 7005; do
              if ! docker exec $(docker ps -q | head -n1) redis-cli -p $port ping > /dev/null 2>&1; then
                echo "  Node $port is not responding"
                all_nodes_up=false
                break
              fi
            done
            
            if [ "$all_nodes_up" = true ]; then
              # Check cluster state
              cluster_state=$(docker exec $(docker ps -q | head -n1) redis-cli -p 7000 cluster info | grep "cluster_state" | cut -d: -f2 | tr -d '\r')
              echo "  Cluster state: $cluster_state"
              
              if [ "$cluster_state" = "ok" ]; then
                echo "✅ Cluster is ready!"
                break
              fi
            fi
            
            echo "  Cluster not ready yet, waiting 5 seconds..."
            sleep 5
            attempt=$((attempt + 1))
          done
          
          if [ $attempt -gt $max_attempts ]; then
            echo "❌ Cluster failed to become ready within timeout"
            echo "=== Final cluster info ==="
            docker exec $(docker ps -q | head -n1) redis-cli -p 7000 cluster info || echo "Failed to get cluster info"
            echo "=== Cluster nodes ==="
            docker exec $(docker ps -q | head -n1) redis-cli -p 7000 cluster nodes || echo "Failed to get cluster nodes"
            exit 1
          fi

      - name: Run cluster tests
        run: bundle exec rake test:cluster
        timeout-minutes: 25

